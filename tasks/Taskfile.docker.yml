# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"
vars:
  DOCKER_BUILDKIT: 1
  DOCKER_SERVER: '{{default "hub.docker.com" .DOCKER_SERVER}}'
  DOCKER_FILE: '{{default "Dockerfile" .DOCKER_FILE}}'
  DOCKER_PATH: '{{default "." .DOCKER_PATH}}'
  DOCKER_EXTRACT_PATH: '{{default "." .DOCKER_EXTRACT_PATH}}'
  DOCKER_IMAGE: '{{default "." .PROJECT}}'
  docker: docker
  IS_CI: "{{default 0 .IS_CI}}"

tasks:
  show:
    desc: Show terraform variables for this task
    silent: true
    cmds:
      - |
        echo "DOCKER_IMAGE: {{.DOCKER_IMAGE}}"
        echo "DOCKER_FILE: {{.DOCKER_FILE}}"
        echo "DOCKER_PATH: {{.DOCKER_PATH}}"
        echo "DOCKER_SERVER: {{.DOCKER_SERVER}}"
        echo "DOCKER_EXTRACT_PATH: {{.DOCKER_EXTRACT_PATH}}"
        echo "VERSION: {{.VERSION}}"
        echo "PROJECT: {{.PROJECT}}"

  login:
    desc: Login to container registry
    silent: true
    cmds:
      - |
        {{.docker}} login {{.DOCKER_SERVER}}

  tag:
    desc: Tag container image
    silent: true
    cmds:
      - |
        {{.docker}} tag {{.DOCKER_IMAGE}}:local {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:{{.GIT_COMMIT}}
        {{.docker}} tag {{.DOCKER_IMAGE}}:local {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:{{.VERSION}}
        {{.docker}} tag {{.DOCKER_IMAGE}}:local {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:latest

  push:
    desc: Push tagged images to registry
    silent: true
    cmds:
      - |
        echo "Pushing container image to registry: latest {{.VERSION}} {{.GIT_COMMIT}}"
        {{.docker}} push {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:{{.GIT_COMMIT}}
        {{.docker}} push {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:{{.VERSION}}
        {{.docker}} push {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:latest

  run:
    desc: Run a local container image for the app
    silent: true
    cmds:
      - |
        {{.docker}} run -t --rm -i --name={{.DOCKER_IMAGE}} {{.DOCKER_IMAGE}}:local

  scan:
    desc: Run a {{.docker}} snyk security scan
    silent: true
    cmds:
      - |
        {{.docker}} scan {{.DOCKER_SERVER}}/{{.DOCKER_IMAGE}}:latest

  dockle:scan:
    desc: Run a dockle security scan
    silent: true
    cmds:
      - |
        dockle {{.DOCKER_IMAGE}}:local

  shell:
    desc: Run a local container image for the app
    silent: true
    cmds:
      - |
        {{.docker}} run -t --rm -i --name={{.DOCKER_IMAGE}} {{.DOCKER_IMAGE}}:local /bin/bash

  extract:
    #desc: Example of using buildkit to extract files from an image
    silent: true
    cmds:
      - |
        mkdir -p {{.ROOT_DIR}} /.local/artifacts
        {{.docker}} build -f {{.DOCKER_FILE}} \
          --target artifact \
            --output type=local,dest=./.local/artifacts .

  build:
    desc: Build container image
    silent: true
    cmds:
      - |
        {{.docker}} build {{.DOCKER_BUILD_ARGS}} -t {{.DOCKER_IMAGE}}:local -f {{.DOCKER_FILE}} {{.DOCKER_PATH}}

  lint:
    #desc: Perform tflint on current terraform
    silent: true
    cmds:
      - echo "TBD"

  format:
    #desc: Perform terraform format on current codebase
    silent: true
    cmds:
      - echo "TBD"

  clean:
    desc: Clean local cached {{.docker}} elements
    silent: true
    cmds:
      - |
        {{.docker}} system prune
